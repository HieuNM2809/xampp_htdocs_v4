version: '3.8'

services:
  # API service
  api:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: sharding-api
    ports:
      - "3333:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_SHARD_1_HOST=mysql-shard1
      - DB_SHARD_1_PORT=3306
      - DB_SHARD_1_USER=root
      - DB_SHARD_1_PASSWORD=rootpassword
      - DB_SHARD_1_DATABASE=sharddb1
      - DB_SHARD_2_HOST=mysql-shard2
      - DB_SHARD_2_PORT=3306
      - DB_SHARD_2_USER=root
      - DB_SHARD_2_PASSWORD=rootpassword
      - DB_SHARD_2_DATABASE=sharddb2
      - LOG_LEVEL=info
    volumes:
      - ./src:/app/src
    depends_on:
      - mysql-shard1
      - mysql-shard2
    networks:
      - shard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Shard 1
  mysql-shard1:
    image: mysql:8.0
    container_name: mysql-shard1
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=sharddb1
    ports:
      - "3666:3306"
    volumes:
      - mysql-shard1-data:/var/lib/mysql
      - ./docker/mysql-shard1/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shard-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Shard 2
  mysql-shard2:
    image: mysql:8.0
    container_name: mysql-shard2
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=sharddb2
    ports:
      - "3777:3306"
    volumes:
      - mysql-shard2-data:/var/lib/mysql
      - ./docker/mysql-shard2/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shard-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer for database management (optional)
  adminer:
    image: adminer
    container_name: sharding-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - shard-network
    depends_on:
      - mysql-shard1
      - mysql-shard2

volumes:
  mysql-shard1-data:
  mysql-shard2-data:

networks:
  shard-network:
    driver: bridge
